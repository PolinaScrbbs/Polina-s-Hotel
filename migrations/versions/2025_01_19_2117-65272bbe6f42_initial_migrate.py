"""Initial Migrate

Revision ID: 65272bbe6f42
Revises: 
Create Date: 2025-01-19 21:17:14.355384

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "65272bbe6f42"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "equirement_elements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "hotel_rooms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=128), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "SINGLE_STANDARD",
                "SINGLE_ROOM_ECONOMY",
                "STANDARD_DOUBLE_ROOM_WITH_TWO_SEPARATE_BEDS",
                "ROOM_ECONOMY_DOUBLE_ROOM_WITH_TWO_SEPARATE_BEDS",
                "TRIPLE_BUDGET",
                "ONE_BED_BUSINESS",
                "BUSINESS_WITH_TWO_BEDS",
                "TWO_ROOM_STANDARD_DOUBLE_ROOM_WITH_ONE_BED",
                "TWO_ROOM_DOUBLE_STANDARD_WITH_TWO_BEDS",
                "ATELIER",
                "A_SUITE_WITH_A_DOUBLE_BED",
                name="roomcategory",
            ),
            nullable=False,
        ),
        sa.Column("floor", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("FREE", "BUSY", "CLEANING", name="roomstatus"),
            nullable=False,
        ),
        sa.Column("price", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "services",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("surname", sa.String(length=64), nullable=False),
        sa.Column("patronymic", sa.String(length=64), nullable=False),
        sa.Column("username", sa.String(length=20), nullable=False),
        sa.Column("hashed_password", sa.String(length=512), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("phone_number", sa.CHAR(length=12), nullable=False),
        sa.Column("registration_address", sa.String(length=128), nullable=False),
        sa.Column("gender", sa.Enum("MALE", "FEMALE", name="gender"), nullable=False),
        sa.Column(
            "role", sa.Enum("USER", "CLIENT", "ADMIN", name="role"), nullable=False
        ),
        sa.Column("is_banned", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("room", sa.Integer(), nullable=False),
        sa.Column("arrival_date", sa.DateTime(), nullable=False),
        sa.Column("eviction_date", sa.DateTime(), nullable=False),
        sa.Column("is_paid", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room"],
            ["hotel_rooms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "room_equirement_elements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("room_id", sa.Integer(), nullable=False),
        sa.Column("element_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["element_id"],
            ["equirement_elements.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["hotel_rooms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=256), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_table(
        "order_service",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("service_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["services.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_service")
    op.drop_table("tokens")
    op.drop_table("room_equirement_elements")
    op.drop_table("orders")
    op.drop_table("users")
    op.drop_table("services")
    op.drop_table("hotel_rooms")
    op.drop_table("equirement_elements")
    # ### end Alembic commands ###
